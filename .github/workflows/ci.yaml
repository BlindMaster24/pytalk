name: Build, Test, and Publish

on:
  push:
    branches: ["**"]
    tags:     ["v*"]
  pull_request:

defaults:
  run:
    shell: bash

concurrency:
  group: ci-${{ github.ref }}-1
  cancel-in-progress: true

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.11", "3.12", "3.13"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install system dependencies (Ubuntu)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y libpulse0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache (Linux)
        if: runner.os == 'Linux'
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-${{ matrix.python-version }}-uv-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-uv-

      - name: Cache (Windows)
        if: runner.os == 'Windows'
        uses: actions/cache@v4
        with:
          path: '%LOCALAPPDATA%\uv-cache'
          key: ${{ runner.os }}-${{ matrix.python-version }}-uv-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-uv-

      - name: Install Hatch
        uses: pypa/hatch@install

      - name: Install project dependencies
        run: hatch env create

      - name: Download TeamTalk SDK
        run: hatch run default:sdk-download

      - name: Workaround for pre-commit/uv bug on Windows
        if: runner.os == 'Windows'
        run: hatch run python -m pip uninstall -y uv

      - name: Run all code quality checks
        run: hatch run dev:check

  build-package:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Install Hatch
        uses: pypa/hatch@install

      - name: Build package distributions
        run: hatch build

      - name: Upload distributions artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
          retention-days: 1

  publish-to-pypi:
    needs: [build-package]
    if: github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Verify tag commit is on master
        run: |
          git fetch origin master
          git merge-base --is-ancestor $GITHUB_SHA origin/master || {
            echo "::error::Tagged commit is not on master. Aborting release.";
            exit 1;
          }

      - name: Download distributions artifact
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
