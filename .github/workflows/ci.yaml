name: Continuous Integration

on:
  push:
    branches: ["**"]
    tags:     ["v*"]
  pull_request:

defaults:
  run:
    shell: bash

concurrency:
  group: ci-tests-${{ github.ref }}-1
  cancel-in-progress: true

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install system dependencies (Ubuntu)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y libpulse0

      - name: Set up Python and cache Hatch environments
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'hatch'

      - name: Install Hatch
        uses: pypa/hatch@install

      - name: Install dependencies
        run: hatch env create

      - name: Download TeamTalk SDK
        run: hatch run default:sdk-download

      - name: Run linting
        run: hatch run dev:lint

      - name: Run formatting check
        run: hatch run dev:format -- --check

      - name: Run type checking
        run: hatch run dev:typecheck

      - name: Install pre-commit hooks
        run: hatch run dev:hooks

  builder_pytalk:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python and cache Hatch environments
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"
          cache: 'hatch'

      - name: Install Hatch
        uses: pypa/hatch@install

      - name: Build wheel
        run: hatch build

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
          retention-days: 1

  publisher_release:
    needs: [builder_pytalk]
    if: github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Verify tag commit is on master
        run: |
          git fetch origin master
          git merge-base --is-ancestor $GITHUB_SHA origin/master || {
            echo "::error::Tagged commit is not on master. Aborting release.";
            exit 1;
          }

      - name: Download wheel artifact
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
